name: GitHub Release

on:
  push:
    tags:
      # "v" で始まる Tag 名の push だけをトリガーの対象にします (e.g., "v0.0.2")
      - "v*"

jobs:
  # macOS 用の job 定義
  build_on_mac:
    runs-on: macos-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - name: npm install
        run: npm install
      # code signing
      - name: apple codesigning
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      # ここでアプリをビルド
      - name: build application
        env:
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          ASC_PROVIDER: ${{ secrets.ASC_PROVIDER }}
          TCE_GOOGLE_CLIENT_SECRET: ${{ secrets.TCE_GOOGLE_CLIENT_SECRET }}
        run: |
          xcrun altool --store-password-in-keychain-item "AC_PASSWORD" -u $APPLEID -p $APPLEIDPASS
          echo 'TCE_GOOGLE_CLIENT_SECRET='${{ secrets.TCE_GOOGLE_CLIENT_SECRET }} > .env
          npm run electron:release --mac
      # Release の作成とビルドしたパッケージのアップロード
      # - name: create release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     # 作成される Release は draft に留めておきたい
      #     draft: true
      #     # アップロード対象となるファイル名
      #     files: |
      #       dist/*.dmg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Windows 用の job 定義
  build_on_win:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - name: npm install
        run: npm install
      - name: build application
        run: |
          echo 'TCE_GOOGLE_CLIENT_SECRET='${{ secrets.TCE_GOOGLE_CLIENT_SECRET }} > .env
          npm run electron:release --win
      # - name: create release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     draft: false
      #     files: |
      #       dist_electron/*.exe
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
